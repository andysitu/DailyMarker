// <auto-generated />
using System;
using DailyMarker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DailyMarker.Data.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20190915062544_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DailyMarker.Models.BasicTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Note");

                    b.HasKey("Id");

                    b.ToTable("BasicTasks");
                });

            modelBuilder.Entity("DailyMarker.Models.TaskDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TDate");

                    b.HasKey("Id");

                    b.ToTable("TaskDates");
                });

            modelBuilder.Entity("DailyMarker.Models.TaskDateTask", b =>
                {
                    b.Property<int>("BasicTaskId");

                    b.Property<int>("TaskDateId");

                    b.HasKey("BasicTaskId", "TaskDateId");

                    b.HasIndex("TaskDateId");

                    b.ToTable("TaskDateTask");
                });

            modelBuilder.Entity("DailyMarker.Models.TaskDateTask", b =>
                {
                    b.HasOne("DailyMarker.Models.BasicTask", "BasicTask")
                        .WithMany("TaskDateTasks")
                        .HasForeignKey("BasicTaskId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DailyMarker.Models.TaskDate", "TaskDate")
                        .WithMany("TaskDateTasks")
                        .HasForeignKey("TaskDateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
